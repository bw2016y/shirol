<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace：命名空间，用于隔离sql，还有一个很重要的作用，后面会讲 -->
<mapper namespace="com.learn.shirol.dao.UserDAO">

    <insert id="save" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        insert into tuser values (#{id},#{username},#{password},#{salt})
    </insert>
    
    
    <select id="findByUserName" parameterType="String" resultType="User">
        select id,username,password,salt from tuser where username = #{username}
    </select>




    <resultMap id="userMap" type="User">
        <id column="uid" property="id"/>
        <result column="uname" property="username"/>
        <collection property="roles" javaType="list" ofType="Role">
            <id column="rid" property="id"/>
            <result column="rname" property="name"/>
        </collection>
    </resultMap>
    <select id="findRolesByUserName" parameterType="String" resultMap="userMap">
select u.id uid, u.username uname , r.id rid,r.name rname
from tuser u left JOIN t_user_role ur on u.id=ur.userid
LEFT JOIN trole r on ur.roleid=r.id
where u.username=#{username}
    </select>


    <select id="findPermsByRoleId" parameterType="String" resultType="Perm">
select p.id ,p.name ,p.url from trole r left JOIN t_role_perm  rp on r.id = rp.roleid
left JOIN tperm p on rp.permid = p.id
where r.id=#{id}
    </select>
    <!-- id:statement的id 或者叫做sql的id-->
    <!-- parameterType:声明输入参数的类型 -->
    <!-- resultType:声明输出结果的类型，应该填写pojo的全路径 -->
    <!-- #{}：输入参数的占位符，相当于jdbc的？ -->

    <!-- 通过id查询一个用户 -->
<!--    <select id="findUserById" parameterType="integer" resultType="com.itheima.domain.User">-->
<!--		select * from user where id=#{id};-->
<!--	</select>-->

    <!-- 通过username 模糊查询用户列表
        #{}: 占位符
        ${}：字符串拼接
     -->
<!--    <select id="findUserByUsername" parameterType="String" resultType="com.itheima.domain.User">-->
<!--		select * from user where username like '%${value}%';-->
<!--	</select>-->


    <!-- 添加用户 -->
<!--    <insert id="insertUser"  parameterType="com.itheima.domain.User">-->
<!--	   INSERT INTO user (username,birthday,sex,address) VALUES (#{username},#{birthday},#{sex},#{address});-->

<!--	</insert>-->

    <!-- 更新用户 -->
<!--    <update id="updatetUser" parameterType="com.itheima.domain.User" >-->
<!--		update user set username=#{username} where id=#{id};-->
<!--	</update>-->

    <!-- 删除用户 -->
<!--    <delete id="deleteUser" parameterType="integer">-->
<!--		delete from user where id= #{id};-->
<!--	</delete>-->

</mapper>